[
    
    {
      "title": "Humanoid Robot (Ongoing)",
      "imageSrc": "https://media.istockphoto.com/id/1159865324/vector/cartoon-robot-hand-drawn-vector-illustration-doodle.jpg?s=612x612&w=0&k=20&c=pMnhNngSJ6kFQhJB7QIqltK7nYKfvkttMaNV17itIe8=",
      "description": "Ongoing development of a 3D voxel-based costmap for a humanoid robot as part of the behavior team. Implemented ROS2 nodes to subscribe to Intel RealSense depth camera streams, generate point clouds, and construct a dynamic voxel grid for real-time obstacle mapping. Researching spatial representations for navigation and terrain analysis in uneven environments.",
      "skills": ["ROS2", "Intel RealSense", "PointCloud", "Voxel Grid", "Navigation", "Robot Perception", "C++", "Python"],
      "demo": "",
      "source": ""
    },
    {
      "title": "Watonomous Vehicle Perception",
      "imageSrc": "https://www.watonomous.ca/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Ftimeline_08.4af93138.jpg&w=2048&q=75",
      "description": "Developed perception modules for a self-driving car with WATonomous. Trained a Variational Autoencoder (VAE) using PyTorch on the nuScenes dataset for anomaly detection. Integrated custom odometry nodes in ROS2 for CARLA simulation using dummy encoders and a bicycle model. Visualized output using Foxglove.",
      "skills": ["PyTorch", "ROS2", "CARLA", "Foxglove", "Autonomy", "VAE", "Perception"],
      "source": "https://github.com/watonomous"
    },
    {
      "title": "LeRobot SO-100 Drawing Arm with Imitation Learning (v1)",
      "imageSrc": "https://i.ibb.co/PzhWhB5Q/armSO.png",
      "description": "Trained a SO-100 robotic arm using imitation learning to reproduce human drawings. Fine-tuned smolVLA model on HuggingFace for vision-language alignment. Deployed real-time demos using the LeRobot SDK. Explored sample-efficient human-in-the-loop learning.",
      "skills": ["Imitation Learning", "LeRobot SDK", "smolVLA", "HuggingFace", "Python", "Vision-Language Models"],
      "demo": "https://www.youtube.com/shorts/hEjpeJSYPPo"
    },
    {
      "title": "ROS2 Differential Drive Robot on Raspberry Pi 4",
      "imageSrc": "https://i.imgur.com/d7pztJB.jpeg",
      "description": "Developed a real-world differential drive robot using ROS2, Ubuntu (ARM64), and Raspberry Pi 4. Integrated Arduino-based motor control with ROS2 hardware interfaces, enabling teleoperation via the teleop_twist_keyboard package. Implemented custom nodes in Python and C++ for velocity control and sensor data processing.",
      "skills": ["ROS2", "Linux (Ubuntu)", "Raspberry Pi 4", "Python", "C++", "Arduino", "Differential Drive"],
      "demo": "https://youtu.be/dKlBclM9tSA",
      "source": "https://github.com/hassaan141/ros_bot"
    },
    {
      "title": "SLAM ROS2 Robot Simulation",
      "imageSrc": "https://i.imgur.com/GcBHbAP.png", 
      "description": "Simulated a differential drive robot in ROS2 with Rviz, Gazebo, camera, and 2D LIDAR, generating point clouds and using SLAM Toolbox for mapping and localization. Controlled on a PS4 controller using the joy package, while using the ros2_control framework with hardware interfaces.",
      "skills": ["Linux (Ubuntu)", "ROS2", "Python", "Gazebo", "Rviz2", "Xacro", "Camera", "Lidar"],
      "demo": "https://www.youtube.com/watch?v=k7NKa-ceQI0",
      "source": "https://github.com/hassaan141/ros_bot/"
    },
    {
      "title": "Gesture Mimic Robot Arm",
      "imageSrc": "https://i.imgur.com/ufwKbEp.jpeg", 
      "description": "Developed a gesture-controlled robotic arm using 3D prototyping and Arduino. Utilized OpenCV and MediaPipe in Python for real-time hand tracking and gesture recognition.",
      "skills": ["Arduino", "Python", "3D Printing", "MG-996R Servos", "OpenCV", "MediaPipe"],
      "source": "https://github.com/hassaan141/gestureControlledArm"
    },
    {
      "title": "YOLOv8 Lego Brick Measuring Device",
      "imageSrc": "https://i.ibb.co/QvYQCMQz/lego.png",
      "description": "Designed a vision-based system to detect and measure Lego bricks in real time. Trained a YOLOv8 model on a custom dataset of annotated Lego pieces for accurate detection. Integrated OpenCV-based measurement using pixel-to-cm calibration and bounding box data. Developed a live UI overlay for visualizing dimensions during inference.",
      "skills": ["YOLOv8", "OpenCV", "Computer Vision", "Object Detection", "Python", "Measurement"],
      "demo": "",
      "source": "https://github.com/hassaan141/lego-size-detection"
    },
    {
      "title": "NBA Game Prediction Model",
      "imageSrc": "https://res.cloudinary.com/zenbusiness/image/upload/v1670445040/logaster/logaster-2020-06-image8.png",
      "description": "Developed an NBA game predictor using ridge regression in Python, achieving 64% accuracy. Trained the model using statistics such as field goals, minutes, and shot attempts from the last 10 games against opponents.",
      "skills": ["Python", "Machine Learning", "Pandas", "Scikit-learn", "NumPy", "Jupyter Notebook"],
      "source": "https://github.com/hassaan141/nbaPredictor"
    },
    {
      "title": "BuzzShare -Social Media App",
      "imageSrc": "https://i.imgur.com/0ocBqdW.png",
      "description": "Created a social media application where users can post tweets similar to twitter with authentication using the JSON web token. Users can sign up and post tweets, and view other users tweets.",
      "skills": ["EJS", "Express", "Node","Tailwind", "MongoDB","Mern Stack", "Auth", "Bcrypt"],
      "demo": "https://buzz-share-rho.vercel.app/",
      "source": "https://www.github.com"
    },
    {
      "title": "Fullstack To-Do List",
      "imageSrc": "https://i.imgur.com/TPryZyN.png",
      "description": "Created a fullstack MERN application to-do list. Stored data using MongoDB.",
      "skills": ["React.JS", "MongoDB", "Express", "Node", "Mern Stack", "Vercel"],
      "demo": "https://to-do-list-front-kappa.vercel.app/",
      "source": "https://github.com/hassaan141/to-do-list"
    },
    {
      "title": "Ping Pong Pilot",
      "imageSrc": "https://i.ibb.co/qtDxM8T/pingpong.png",
      "description": "Created a ping pong serving robot using LegoEV3, consisting of motors, ultrasonic, color and     gyro sensor. Coded in C using RobotC",
      "skills": ["Lego EV3", "Ultrasonic Sensor", "Gyro Sensor ","Color Sensor ", "C", "Robot C"],
      "source": "https://github.com/hassaan141/PingPong-Pilot"
    },
    {
      "title": "Tic-Tac-Toe",
      "imageSrc": "https://i.imgur.com/0voTzly.png",
      "description": "Created a tic-tac-toe game with stunning UI.",
      "skills": ["HTML", "CSS", "Javascript"],
      "demo": "https://tictactoe-iota-jet.vercel.app/",
      "source": "https://github.com/hassaan141/tictactoe"
    },
    {
      "title": "Personal Portfolio",
      "imageSrc": "https://i.imgur.com/fCHkBHT.png",
      "description": "Created a personal portfolio website demonstrating my projects and experiences.",
      "skills": ["React (Vite)", "CSS", "Javascript", "JSON"],
      "demo": "https://website-eight-pi-16.vercel.app/",
      "source": "https://github.com/hassaan141/website"
    },
    {
      "title": "Vex Robot",
      "imageSrc": "https://i.imgur.com/GIgnyTc.png",
      "description": "Built a robot using Vex, with python. Implemented autonomous driving which allowed the robot to navigate the field with precision. lift elevator using gears and a kicking mechanism. ",
      "skills": ["Vex", "Ultrasonic Sensor", "Gyro Sensor ", "Touch Sensor", "Python", "C++", "Robot C"],
      "source": "https://www.github.com/hassaan141"
    },
    {
        "title": "Frogger",
        "imageSrc": "https://i.imgur.com/ggCoGyC.png",
        "description": "Created a clone of frogger using OOP Principles.",
        "skills": ["Javascript", "P5.JS", "OOP"],
        "demo": "https://editor.p5js.org/353691868/full/CHUJkpOoQ",
        "source": "https://editor.p5js.org/353691868/full/CHUJkpOoQ"
    },
    {
        "title": "Insertion Sort Visualization",
        "imageSrc": "https://i.imgur.com/rdZeiKM.png",
        "description": "Developed an interactive visualization of the insertion sort algorithm using P5.js. Collaborated with Naeem Baig to illustrate the step-by-step sorting process, enhancing understanding of the algorithm.",
        "skills": ["P5.JS", "Javascript", "Algorithm Design", "Collaboration"],
        "demo": "https://editor.p5js.org/353729428/full/uVbeL7dJD", 
        "source": "https://github.com/Naeem404/Insertion-Sorting-Animation"
    }

]
  
  
